data <- data[,c(2,7,11)]
names(data)[3]<-"mortality"
data <- data[ order(data[,2],data[,3],data[,1]),]
data <- data[!is.na(data$mortality),]
data
?tapply
trialdata <- data
class(data)
levels(data)
factors(data)
names(data)
trialdata <- tapply(data,data$State)
trialdata <- split(data,data$State)
trialdata
trialdata("WY")
trialdata["WY"]
trialdata$WY
trialdata$WY[1]
trialdata$WY[1,1]
trialdata$WY[1,c(1,2)]
class(trialdata)
df <- data.frame(hospital = character(), state = character() )
append(df, trialdata$WY[1,c(1,2)])
df
trialdata[1][1,1]
trialdata()[1,1]
trialdata$names(trialdata)[1][1,1]
trialdata$names(trialdata)[1]
names(trialdata)[1]
ak <- as.factor(names(trialdata)[1])
ak
trialdata$ak
trialdata$ak[1]
trialdata[[2]]
trialdata[[2][2,c(1,2)]]
trialdata[[2]][2,c(1,2)]
trialdata[[2]][2,c(5,2)]
trialdata[[2]][7,c(1,2)]
trialdata[[2]][70,c(1,2)]
nrows(statelist)
nrow(statelist)
length(statelist)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
statelist <- unique(data$State)
stateExists <- state %in% statelist
data[,11] <- as.numeric(data[,11])
data <- data[,c(2,7,11)]
names(data)[3]<-"mortality"
data <- data[ order(data[,2],data[,3],data[,1]),]
data <- data[!is.na(data$mortality),]
data <- split(data,data$State)
#highdata <- data[which(data$State == state),c(2,14)]
answer <- data.frame(hospital = character(), state = character())
if(num == "best"){
for(i in length(statelist))
{
#append trialdata[[2]][70,c(1,2)] to dataframe
#data[[i]][num,c(1,2)]
answer <- rbind(answer, data[[i]][1,c(1,2)] )
}
}
num <- "best"
if(num == "best"){
for(i in length(statelist))
{
#append trialdata[[2]][70,c(1,2)] to dataframe
#data[[i]][num,c(1,2)]
answer <- rbind(answer, data[[i]][1,c(1,2)] )
}
}
answer
if(num == "best"){
for(i in length(statelist))
{
#append trialdata[[2]][70,c(1,2)] to dataframe
#data[[i]][num,c(1,2)]
answer <- append(answer, data[[i]][1,c(1,2)] )
}
}
answer
l <- c("d", "e")
class(l)
if(num == "best"){
for(i in length(statelist))
{
#append trialdata[[2]][70,c(1,2)] to dataframe
#data[[i]][num,c(1,2)]
answer <- rbind(answer, data[[i]][1,c(1,2)] )
}
}
answer <- data.frame(hospital = character(), state = character())
if(num == "best"){
for(i in length(statelist))
{
#append trialdata[[2]][70,c(1,2)] to dataframe
#data[[i]][num,c(1,2)]
answer <- rbind(answer, data[[i]][1,c(1,2)] )
}
}
if(num == "best"){
for(i in length(statelist)-1)
{
#append trialdata[[2]][70,c(1,2)] to dataframe
#data[[i]][num,c(1,2)]
answer <- rbind(answer, data[[i]][1,c(1,2)] )
}
}
answer <- data.frame(hospital = character(), state = character())
if(num == "best"){
for(i in 1:length(statelist))
{
#append trialdata[[2]][70,c(1,2)] to dataframe
#data[[i]][num,c(1,2)]
answer <- rbind(answer, data[[i]][1,c(1,2)] )
}
}
answer
length(data[i])
length(data[34])
length(data[[34]])
length(data[[35]])
length(data[[36]])
nrow(data[[36]])
submit
submit()
outcome <- "pneumonia"
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
statelist <- unique(data$State)
stateExists <- state %in% statelist
if(!stateExists)#checks if state is actual state
{
stop("invalid state")
}
if(outcome == "heart attack")
{
data[,11] <- as.numeric(data[,11])
data <- data[,c(2,7,11)]
names(data)[3]<-"mortality"
data <- data[ order(data[,2],data[,3],data[,1]),]
data <- data[!is.na(data$mortality),]
data <- split(data,data$State)
#highdata <- data[which(data$State == state),c(2,14)]
answer <- data.frame(hospital = character(), state = character())
if(num == "best"){
for(i in 1:length(statelist))
{
answer <- rbind(answer, data[[i]][1,c(1,2)] )
}
}
else if(num == "worst"){
for(i in 1:length(statelist))
{
#append trialdata[[2]][70,c(1,2)] to dataframe
#data[[i]][num,c(1,2)]
answer <- rbind(answer, data[[i]][nrow(data[[i]]),c(1,2)] )
}
}
else if(is.numeric(num)){
answer <- rbind(answer, data[[i]][num,c(1,2)] )
}
else{}
}
else if(outcome == "heart failure")
{
data[,17] <- as.numeric(data[,17])
data <- data[,c(2,7,17)]
names(data)[3]<-"mortality"
data <- data[ order(data[,2],data[,3],data[,1]),]
data <- data[!is.na(data$mortality),]
data <- split(data,data$State)
#highdata <- data[which(data$State == state),c(2,14)]
answer <- data.frame(hospital = character(), state = character())
if(num == "best"){
for(i in 1:length(statelist))
{
answer <- rbind(answer, data[[i]][1,c(1,2)] )
}
}
else if(num == "worst"){
for(i in 1:length(statelist))
{
#append trialdata[[2]][70,c(1,2)] to dataframe
#data[[i]][num,c(1,2)]
answer <- rbind(answer, data[[i]][nrow(data[[i]]),c(1,2)] )
}
}
else if(is.numeric(num)){
answer <- rbind(answer, data[[i]][num,c(1,2)] )
}
else{}
}
else if(outcome == "pneumonia")
{
data[,23] <- as.numeric(data[,23])
data <- data[,c(2,7,23)]
names(data)[3]<-"mortality"
data <- data[ order(data[,2],data[,3],data[,1]),]
data <- data[!is.na(data$mortality),]
data <- split(data,data$State)
#highdata <- data[which(data$State == state),c(2,14)]
answer <- data.frame(hospital = character(), state = character())
if(num == "best"){
for(i in 1:length(statelist))
{
answer <- rbind(answer, data[[i]][1,c(1,2)] )
}
}
else if(num == "worst"){
for(i in 1:length(statelist))
{
#append trialdata[[2]][70,c(1,2)] to dataframe
#data[[i]][num,c(1,2)]
answer <- rbind(answer, data[[i]][nrow(data[[i]]),c(1,2)] )
}
}
else if(is.numeric(num)){
answer <- rbind(answer, data[[i]][num,c(1,2)] )
}
else{}
}
else{
stop("invalid outcome")
}
answer
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
answer
data
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
statelist <- unique(data$State)
stateExists <- state %in% statelist
if(!stateExists)#checks if state is actual state
{
stop("invalid state")
}
if(outcome == "heart attack")
{
data[,11] <- as.numeric(data[,11])
data <- data[,c(2,7,11)]
names(data)[3]<-"mortality"
data <- data[ order(data[,2],data[,3],data[,1]),]
data <- data[!is.na(data$mortality),]
data <- split(data,data$State)
#highdata <- data[which(data$State == state),c(2,14)]
answer <- data.frame(hospital = character(), state = character())
if(num == "best"){
for(i in 1:length(statelist))
{
answer <- rbind(answer, data[[i]][1,c(1,2)] )
}
}
else if(num == "worst"){
for(i in 1:length(statelist))
{
#append trialdata[[2]][70,c(1,2)] to dataframe
#data[[i]][num,c(1,2)]
answer <- rbind(answer, data[[i]][nrow(data[[i]]),c(1,2)] )
}
}
else if(is.numeric(num)){
answer <- rbind(answer, data[[i]][num,c(1,2)] )
}
else{}
}
else if(outcome == "heart failure")
{
data[,17] <- as.numeric(data[,17])
data <- data[,c(2,7,17)]
names(data)[3]<-"mortality"
data <- data[ order(data[,2],data[,3],data[,1]),]
data <- data[!is.na(data$mortality),]
data <- split(data,data$State)
#highdata <- data[which(data$State == state),c(2,14)]
answer <- data.frame(hospital = character(), state = character())
if(num == "best"){
for(i in 1:length(statelist))
{
answer <- rbind(answer, data[[i]][1,c(1,2)] )
}
}
else if(num == "worst"){
for(i in 1:length(statelist))
{
#append trialdata[[2]][70,c(1,2)] to dataframe
#data[[i]][num,c(1,2)]
answer <- rbind(answer, data[[i]][nrow(data[[i]]),c(1,2)] )
}
}
else if(is.numeric(num)){
answer <- rbind(answer, data[[i]][num,c(1,2)] )
}
else{}
}
else if(outcome == "pneumonia")
{
data[,23] <- as.numeric(data[,23])
data <- data[,c(2,7,23)]
names(data)[3]<-"mortality"
data <- data[ order(data[,2],data[,3],data[,1]),]
data <- data[!is.na(data$mortality),]
data <- split(data,data$State)
#highdata <- data[which(data$State == state),c(2,14)]
answer <- data.frame(hospital = character(), state = character())
if(num == "best"){
for(i in 1:length(statelist))
{
answer <- rbind(answer, data[[i]][1,c(1,2)] )
}
}
else if(num == "worst"){
for(i in 1:length(statelist))
{
#append trialdata[[2]][70,c(1,2)] to dataframe
#data[[i]][num,c(1,2)]
answer <- rbind(answer, data[[i]][nrow(data[[i]]),c(1,2)] )
}
}
else if(is.numeric(num)){
answer <- rbind(answer, data[[i]][num,c(1,2)] )
}
else{}
}
else{
stop("invalid outcome")
}
names(answer) <- c("hospital", "state")
answer
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
}
answer
names(answer)[c(1,2)] <- c("hospital", "state")
answer
submit()
rankall("heart attack", 4)
source("rankall.R")
rankall("heart attack", 4)
source("rankall.R")
rankall("heart attack", 4)
submit()
submit()
submit()
system.time(rankall.R("heart attack", 7))
system.time(rankall("heart attack", 7))
x<- runif(1000000)
summaryRprof()
Rprof()
Rprof(NULL)
summaryRprof()
source("powers.R")
system.time(powers1(x,8))
system.time(powers2(x,8))
source("powers.R")
system.time(powers3(x,8))
source("powers.R")
system.time(powers4(x,8))
m <- 5000
n <- 1000
z <- list()
for(i in 1:m z[[i]]<- sample(1:10,n, replace=T))
for(i in 1:m) z[[i]]<- sample(1:10,n, replace=T)
z
Rprof(NULL)
x <- runif(1000000)
Rprof()
invisible(powers1(x,8))
Rprof(NULL)
summaryRprof()
Rprof()
invisible(powers2(x,8))
Rprof(NULL)
summaryRprof()
Rprof()
invisible(powers2(x,8))
Rprof(NULL)
summaryRprof()
Rprof()
invisible(powers3(x,8))
Rprof(NULL)
summaryRprof()
Rprof()
invisible(powers4(x,8))
Rprof(NULL)
summaryRprof()
Rprof.out
open("Rprof.out")
example(seq)
+(2,3)
"+"(2,3)
x<- c(1,2,4)
x * c(5,0,-1)
y <- c(1.2,3.9,0.4,0.12)
y[6]
y[-6]
y[-2]
?Syntax
swirl()
library("swirl")
rm(list=ls())
swirl()
ls
ls()
class(plants)
dim(plants)
plants
norw(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS, 26)
sample(LETTERS)
sample(c(0,1), 100, replace = TRUE, prob = c(.3,.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(.3,.7))
flips
sum(flips)
?rbinom
rbinom)1, size = 100, prob = .7)
rbinom(1, size = 100, prob = .7)
flips <- rbinom(1, size = 100, prob = .7)
flips2 <- rbinom(1, size = 100, prob = .7)
flips2 <- rbinom(n = 100, size = 100, prob = .7)
flips2 <- rbinom(1, n = 100, size = 100, prob = .7)
flips2 <- rbinom( n = 100, size = 1, prob = .7)
flips2
sum(flips2)
?rnorm()
?rnorm
rnorm(10)
rnorm(10, 100, 25)
rpois(5,10)
replicate(100, rpois(5,10))
my_pois <- replicate(100, rpois(5,10))
my_pois
cm colmeans(my_pois)
cm <- colmeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1<- Sys.time()
t1
class(t1)
unclass(t1)
asPOSIXlt(Sys.time())
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(),t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plots(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(mpg~cyl, mtcars)
hist(mtcars$mpg)
